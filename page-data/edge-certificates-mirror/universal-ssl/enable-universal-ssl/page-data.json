{
  "componentChunkName": "component-mdx.js",
  "path": "/edge-certificates/universal-ssl/enable-universal-ssl",
  "result": {
    "data": {
      "mdx": {
        "id": "191354ce-2bd5-55b1-b91b-a3f78f6dfd7d",
        "body": "var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 1,\n  \"pcx-content-type\": \"how-to\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"enable-universal-ssl\"\n  }, \"Enable Universal SSL\"), mdx(\"h2\", {\n    \"id\": \"authoritative-full-domains\"\n  }, \"Authoritative (Full) domains\"), mdx(\"p\", null, \"For an authoritative or full domain \\u2014 domains that changed their \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://support.cloudflare.com/hc/articles/205195708\"\n  }, \"domain nameservers\"), \" \\u2013 Universal SSL requires two steps:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Once you change your domain nameservers, your domain should receive its Universal SSL certificate within \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"24 hours\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Your SSL/TLS mode defaults to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ssl/origin-configuration/ssl-modes#flexible\"\n  }, \"Flexible\"), \", which encrypts traffic between a site visitor and Cloudflare (but not Cloudflare and your origin server). To encrypt traffic between Cloudflare and your origin server, see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ssl/origin-configuration/ssl-modes\"\n  }, \"SSL modes\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ssl/origin-configuration/origin-ca\"\n  }, \"Origin CA certificates\"), \".\")), mdx(\"h2\", {\n    \"id\": \"non-authoritative-partial-domains\"\n  }, \"Non-authoritative (Partial) domains\"), mdx(\"p\", null, \"For non-authoritative or partial domains (domains on a CNAME setup), Universal SSL will be:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Provisioned once the DNS record is \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://support.cloudflare.com/hc/articles/360020348832#h_836723523521544131668686\"\n  }, \"proxied through Cloudflare\"), \" (orange-clouded).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Validated:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Immediately if you add \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../changing-dcv-method\"\n  }, \"Domain Control Validation (DCV)\"), \" records to your authoritative DNS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After a brief period of downtime if you \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"do not\"), \" add DCV records (once your traffic is proxied).\")))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "frontmatter": {
          "demo": null,
          "difficulty": null,
          "summary": null,
          "tags": null,
          "title": "",
          "type": null,
          "updated": null
        }
      }
    },
    "pageContext": {
      "id": "191354ce-2bd5-55b1-b91b-a3f78f6dfd7d",
      "fields": {
        "slug": "/edge-certificates/universal-ssl/enable-universal-ssl"
      },
      "frontmatter": {
        "title": "",
        "type": null,
        "order": 1,
        "hidden": null,
        "hideChildren": null,
        "breadcrumbs": null
      },
      "headings": [
        {
          "value": "Enable Universal SSL",
          "depth": 1
        }
      ],
      "tableOfContents": {
        "items": [
          {
            "url": "#enable-universal-ssl",
            "title": "Enable Universal SSL",
            "items": [
              {
                "url": "#authoritative-full-domains",
                "title": "Authoritative (Full) domains"
              },
              {
                "url": "#non-authoritative-partial-domains",
                "title": "Non-authoritative (Partial) domains"
              }
            ]
          }
        ]
      },
      "parent": {
        "modifiedTime": "2021-07-26",
        "relativePath": "edge-certificates/universal-ssl/enable-universal-ssl.md"
      }
    }
  },
  "staticQueryHashes": [
    
    "123456789"
  ]
}