{"componentChunkName":"component-mdx.js","path":"/edge-certificates/custom-certificates/bundling-methodologies","result":{"data":{"mdx":{"id":"a24d23a2-a237-5466-8b81-d4d1175f2fd6","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 3,\n  \"pcx-content-type\": \"reference\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bundling-methodologies\"\n  }, \"Bundling methodologies\"), mdx(\"p\", null, \"When an SSL certificate is deployed to the Cloudflare edge, it may be augmented with intermediate and root certificates to assist the user agent in finding a chain to a publicly trusted root. You can control the mechanics of how certificates are bundled by specifying a bundling methodology.\"), mdx(\"h2\", {\n    \"id\": \"compatible\"\n  }, \"Compatible\"), mdx(\"p\", null, \"Compatible mode is the default and uses common and well distributed intermediate certificates to complete the chain, ensuring that the resulting bundle is compatible with as many clients as possible.\"), mdx(\"h2\", {\n    \"id\": \"modern\"\n  }, \"Modern\"), mdx(\"p\", null, \"Modern attempts to make the chain as efficient as possible, often by using newer or fewer intermediate certificates.\"), mdx(\"h2\", {\n    \"id\": \"user-defined\"\n  }, \"User-defined\"), mdx(\"p\", null, \"User defined allows you to paste your own certificate chain and present that bundle to clients. You must specify any intermediates you wish to use, followed by the leaf. If you\\u2019re using a self-signed certificate (not recommended), you must use this mode.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"a24d23a2-a237-5466-8b81-d4d1175f2fd6","fields":{"slug":"/edge-certificates/custom-certificates/bundling-methodologies"},"frontmatter":{"title":"","type":null,"order":3,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Bundling methodologies","depth":1}],"tableOfContents":{"items":[{"url":"#bundling-methodologies","title":"Bundling methodologies","items":[{"url":"#compatible","title":"Compatible"},{"url":"#modern","title":"Modern"},{"url":"#user-defined","title":"User-defined"}]}]},"parent":{"modifiedTime":"2021-07-26","relativePath":"edge-certificates/custom-certificates/bundling-methodologies.md"}}},"staticQueryHashes":["1052658729","2814688963","32046230","338033027","811020565"]}